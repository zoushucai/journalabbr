% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bib2bib.R
\name{bib2bib}
\alias{bib2bib}
\title{Load .bib, Process .bib and Output .bib File.}
\usage{
bib2bib(
  file,
  out.file,
  user_table = NULL,
  use_sys_table = TRUE,
  fun = NULL,
  ...
)
}
\arguments{
\item{file}{A string representing the path to the input \code{.bib} file to be processed.}

\item{out.file}{A string representing the path where the output \code{.bib} file should be saved.}

\item{user_table}{A user-provided abbreviation table. It can be a file path (string),
a \code{data.frame}, or a \code{data.table}.
The table must contain columns \code{journal_lower} and \code{journal_abbr}. Default is \code{NULL}.}

\item{use_sys_table}{Logical. Whether to include the system abbreviation table (\code{abbrtable_sys})
in the merged result. Default is \code{TRUE}.}

\item{fun}{A function (optional) to apply to the "author" field in the \code{.bib} file.
If provided, this function will be applied to the "author" field}

\item{...}{Additional arguments passed to the custom function \code{fun}, if provided.}
}
\value{
None. The function writes the processed data to the specified output file.
}
\description{
The \code{bib2bib} function reads a BibTeX file, replaces the journal field using a custom or
system-provided abbreviation table, optionally applies a function to the author field,
and writes the result back to a new BibTeX file.
}
\details{
The function works in the following steps:
\enumerate{
\item Reads a custom journal abbreviation table from a CSV file (if provided).
\item Reads the input BibTeX file and converts it into a \code{data.table}.
\item Replaces the \code{JOURNAL} field with abbreviations from the provided or system abbreviation table.
\item Optionally applies the provided function to the \code{AUTHOR} field.
\item Writes the modified data back to a new BibTeX file.
}
}
\examples{
bib_file <- system.file("extdata", "testfile_2.bib", package = "journalabbr", mustWork = TRUE)
csv_file <- system.file("extdata", "myabbr.csv", package = "journalabbr", mustWork = TRUE)
output_file <- tempfile(fileext = ".bib")

dt <- bib2bib(file = bib_file,
        out.file = output_file,
        user_table = csv_file,
        use_sys_table = TRUE,
        fun = function(x) {
          gsub(" and ", " & ", x, perl = TRUE, ignore.case = TRUE)
        })
}
