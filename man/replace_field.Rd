% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/replace_field.R
\name{replace_field}
\alias{replace_field}
\title{Replace or process a specified field in a data.table}
\usage{
replace_field(
  dt,
  oldfield,
  newfield,
  user_table = NULL,
  use_sys_table = TRUE,
  fun = NULL,
  ...
)
}
\arguments{
\item{dt}{A \code{data.table}. The input data table that contains the field to be processed.}

\item{oldfield}{A character string. The name of the field to be processed, typically in uppercase
(e.g., "JOURNAL"). Must be a valid column name in \code{dt}.}

\item{newfield}{A character string. The name of the new field where the processed result will be stored.
If this field does not exist in \code{dt}, it will be created.}

\item{user_table}{A \code{data.table}. Optional. A user-provided journal abbreviation table with at least
two columns: \code{journal_lower} and \code{journal_abbr}. Defaults to \code{NULL}. If provided, it will be merged
with the system abbreviation table if \code{use_sys_table = TRUE}.}

\item{use_sys_table}{A logical. Whether to use the system-provided journal abbreviation table.
Defaults to \code{TRUE}. If \code{TRUE}, the system abbreviation table is used alongside the user-provided one.}

\item{fun}{A function. Optional. A custom function to apply to the processed field after abbreviation
(if applicable). Defaults to \code{NULL}. The function should accept a column from \code{dt} as its first argument
and return the processed values.}

\item{...}{Additional arguments passed to the custom function \code{fun}, if provided.}
}
\value{
The function returns the modified \code{data.table} with the processed field stored in \code{newfield}.
}
\description{
This function processes a specified field in a \code{data.table} by using a journal abbreviation table
(either user-specified, system-provided, or both) to abbreviate journal names in the \code{oldfield}.
Additionally, a custom function can be applied to the processed field if specified.
}
\details{
If the \code{oldfield} is "JOURNAL", the function will attempt to apply journal abbreviations using the provided
abbreviation table(s). The abbreviation process involves converting the journal names to lowercase and
removing excess whitespace before matching against the abbreviation table.

The \code{user_table} and \code{use_sys_table} parameters allow flexibility in choosing which abbreviation
tables to use. If both are used, they will be merged, and duplicates will be removed.

If a custom function is provided via \code{fun}, it will be applied to the processed field after any abbreviations.
}
\examples{
csvpath <- system.file("extdata", "myabbr.csv", package = "journalabbr", mustWork = TRUE)
file <- system.file("extdata", "testfile_2.bib", package = "journalabbr", mustWork = TRUE)
dt <- read_bib2dt(file)

abbrtable_user = get_abbrtable(user_table = csvpath, use_sys_table =TRUE)
print(head(abbrtable_user))
dm1 = replace_field(dt,
                    oldfield = "JOURNAL",
                    newfield = "JOURNAL",
                    user_table = csvpath,
                    use_sys_table =TRUE,
                    fun = NULL)

myauthor = function(x){ gsub(" and ", " & ", x, perl = TRUE, ignore.case = TRUE) }
dm2 = replace_field(dm1,
                    oldfield = "AUTHOR",
                    newfield = "AUTHOR",
                    user_table = NULL,
                    use_sys_table =FALSE,
                    fun = myauthor)
print(head(dt)[, c("JOURNAL", "AUTHOR"), with = FALSE])
print(head(dm1)[, c("JOURNAL", "AUTHOR"), with = FALSE])
print(head(dm2)[, c("JOURNAL", "AUTHOR"), with = FALSE])

}
